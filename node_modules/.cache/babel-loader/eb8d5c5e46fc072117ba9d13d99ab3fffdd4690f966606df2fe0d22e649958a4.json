{"ast":null,"code":"var _jsxFileName = \"/Users/sennatitcomb/Documents/GitHub/CS362/sennatitcomb.github.io/src/Weather.js\",\n  _s = $RefreshSig$();\n// Weather.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherComponent = () => {\n  _s();\n  const [location, setLocation] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const fetchWeatherData = async () => {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=APIKEY`);\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter location\",\n      value: location,\n      onChange: e => setLocation(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeatherData,\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Weather in \", weatherData.name, \", \", weatherData.sys.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Weather: \", weatherData.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherComponent, \"zlE3FMrl9OiQCTcUkwJ/z2erc9w=\");\n_c = WeatherComponent;\nexport default WeatherComponent;\nvar _c;\n$RefreshReg$(_c, \"WeatherComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WeatherComponent","_s","location","setLocation","weatherData","setWeatherData","fetchWeatherData","response","fetch","data","json","error","console","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","sys","country","main","temp","weather","description","_c","$RefreshReg$"],"sources":["/Users/sennatitcomb/Documents/GitHub/CS362/sennatitcomb.github.io/src/Weather.js"],"sourcesContent":["// Weather.js\nimport React, { useState } from 'react';\n\nconst WeatherComponent = () => {\n  const [location, setLocation] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n\n  const fetchWeatherData = async () => {\n    try {\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=APIKEY`\n      );\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Enter location\"\n        value={location}\n        onChange={(e) => setLocation(e.target.value)}\n      />\n      <button onClick={fetchWeatherData}>Get Weather</button>\n\n      {weatherData && (\n        <div>\n          <h2>Weather in {weatherData.name}, {weatherData.sys.country}</h2>\n          <p>Temperature: {weatherData.main.temp}Â°C</p>\n          <p>Weather: {weatherData.weather[0].description}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WeatherComponent;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,qDAAoDN,QAAS,eAChE,CAAC;MACD,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,cAAc,CAACI,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAc,QAAA,gBACEd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAEd,QAAS;MAChBe,QAAQ,EAAGC,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFxB,OAAA;MAAQyB,OAAO,EAAElB,gBAAiB;MAAAO,QAAA,EAAC;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEtDnB,WAAW,iBACVL,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,GAAI,aAAW,EAACT,WAAW,CAACqB,IAAI,EAAC,IAAE,EAACrB,WAAW,CAACsB,GAAG,CAACC,OAAO;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjExB,OAAA;QAAAc,QAAA,GAAG,eAAa,EAACT,WAAW,CAACwB,IAAI,CAACC,IAAI,EAAC,OAAE;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7CxB,OAAA;QAAAc,QAAA,GAAG,WAAS,EAACT,WAAW,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CAnCID,gBAAgB;AAAAgC,EAAA,GAAhBhC,gBAAgB;AAqCtB,eAAeA,gBAAgB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}